{"version":3,"sources":["components/currentCityWeather/todayWeather.js","components/currentCityWeather/fiveDaysforecast.js","components/currentCityWeather/currentCityWeather.js","components/home/home.js"],"names":["TodayWeather","currentCity","favorites","dispatch","useDispatch","isCelsius","useSelector","state","degreeType","isFavorite","length","find","favorite","cityInfo","Key","favoriteFunc","favoritesAction","TodayWeatherStyle","CityAndTempStyle","CityName","LocalizedName","Math","round","todayWeather","Temperature","Metric","Value","convertToF","StickySide","IconStyle","onClick","color","fontSize","ImageAndStatus","WeatherStatus","WeatherText","Image","src","WeatherIcon","alt","styled","span","div","img","days","FiveDaysForecast","ScrollWrapper","FiveDaysForecastStyle","fiveDayaWeather","DailyForecasts","map","weatherItem","index","DayStyle","key","DayStyleLineHeader","Date","moment","getDay","DayStyleLine","KeyStyle","ValueStyle","convertToC","Maximum","Minimum","CurrentCityWeather","data","CurrentCityWeatherStyle","Home","HomeWrapper","loading","SpinnerWrapper","CircularProgress","size","SpinnerText"],"mappings":"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","file":"static/js/5.7234ca64.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport {convertToF} from '../../utils'\r\nimport { useDispatch } from 'react-redux'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\n\r\nimport {favoritesAction} from '../../actions/favoritesAction'\r\n\r\nconst TodayWeather = ({currentCity, favorites}) => {\r\n    const dispatch = useDispatch()\r\n    const isCelsius = useSelector((state) => state.degreeType.isCelsius)\r\n    const isFavorite = currentCity && favorites.length > 0 && favorites.find((favorite)=>favorite.cityInfo.Key=== currentCity.cityInfo.Key)\r\n\r\n    const favoriteFunc = () => {\r\n        isFavorite ? dispatch(favoritesAction(currentCity, false)) : dispatch(favoritesAction(currentCity, true))\r\n    }\r\n    return   <TodayWeatherStyle>\r\n                         <CityAndTempStyle>\r\n                            <CityName>{currentCity && currentCity.cityInfo && currentCity.cityInfo.LocalizedName}</CityName>\r\n                            {isCelsius && <div>{Math.round(currentCity.todayWeather.Temperature.Metric.Value)}°C</div>}\r\n                            {!isCelsius && <div>{convertToF(currentCity.todayWeather.Temperature.Metric.Value)}°F</div>}\r\n                        </CityAndTempStyle>\r\n                        <StickySide>\r\n                                <IconStyle>{!isFavorite ? <FavoriteBorderIcon onClick={()=>favoriteFunc()} color={\"secondary\"} fontSize={\"inherit\"}/> :\r\n                                <FavoriteIcon onClick={()=>favoriteFunc()} color={\"secondary\"}  fontSize={\"inherit\"}/>}\r\n                                </IconStyle>\r\n                            </StickySide>\r\n                        <ImageAndStatus>\r\n                            <WeatherStatus>{currentCity.todayWeather.WeatherText}</WeatherStatus>\r\n                            <Image\r\n                            src={`https://developer.accuweather.com/sites/default/files/${\r\n                                currentCity.todayWeather.WeatherIcon < 10\r\n                                ? \"0\" + currentCity.todayWeather.WeatherIcon\r\n                                : currentCity.todayWeather.WeatherIcon\r\n                            }-s.png`}\r\n                            alt=\"icon\"\r\n                            />\r\n                            \r\n                        </ImageAndStatus>\r\n            </TodayWeatherStyle>\r\n\r\n}\r\n\r\nexport default TodayWeather\r\nconst IconStyle = styled.span`\r\n    position:absolute;\r\n    display:inline-block;\r\n    right: 0px;\r\n    top:50%;\r\n    display:flex;\r\n    align-items:center;\r\n    transform:translateY(-50%);\r\n`\r\nexport const StickySide = styled.div`\r\nfont-size:4rem;\r\nposition: absolute;\r\nborder-radius:1rem;\r\nwidth: 10rem ;\r\nheight:5rem;\r\nbackground-color:#ffffff;\r\ntransition: all .4s ease-in-out;\r\nanimation: mymove 3s infinite;\r\ntop:50%;\r\n\r\n&:hover {\r\n    transform: scale(1.1);\r\n    left: 0rem;\r\n}\r\ncursor: pointer;\r\n@media screen \r\n            and (max-device-width: 580px) \r\n            and (-webkit-min-device-pixel-ratio: 1) { \r\n                top:150%;\r\n    }\r\n@keyframes mymove {\r\n        0% {\r\n            left:-7rem;\r\n        }\r\n        50% {\r\n            left: -4rem;\r\n        }\r\n        100% {\r\n            left:-7rem;\r\n        }\r\n}\r\n`\r\nexport const ImageAndStatus = styled.div`\r\ndisplay:flex;\r\nalign-items:center;\r\njustify-content: space-between;\r\nfont-size:4rem;\r\ntransform:translateX(5%);\r\n`\r\nexport const Image = styled.img`\r\nwidth:10rem;\r\n@media screen \r\n            and (max-device-width: 580px) \r\n            and (-webkit-min-device-pixel-ratio: 1) { \r\n                width:7rem;\r\n    }\r\n`\r\nexport const WeatherStatus = styled.span`\r\n    text-transform: uppercase;\r\n    font-size: 3rem;\r\n    letter-spacing: 0.2rem;\r\n\r\n    @media screen \r\n            and (max-device-width: 580px) \r\n            and (-webkit-min-device-pixel-ratio: 1) { \r\n                font-size: 2rem;\r\n    }\r\n`\r\nexport const CityName = styled.span`\r\n    text-transform: uppercase;\r\n    display: block;\r\n    margin-right: 3rem;\r\n    @media screen \r\n            and (max-device-width: 580px) \r\n            and (-webkit-min-device-pixel-ratio: 1) { \r\n                margin-right: 1rem;\r\n    }\r\n`\r\nexport const TodayWeatherStyle = styled.div`\r\n    position:relative;\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n    color:#ffffff;\r\n    animation-name: fadeIn;\r\n    animation-duration: 2s;\r\n    animation-timing-function: ease-out;\r\n    z-index: 1;\r\n    @keyframes fadeIn {\r\n        0% {\r\n            opacity: 0;\r\n        }\r\n        100% {\r\n            opacity: 1;\r\n        }\r\n    }\r\n`\r\n\r\nexport const CityAndTempStyle = styled.div`\r\n    display:flex;\r\n    font-size: 6rem;\r\n    font-weight: 400;\r\n    letter-spacing: 0.5rem;\r\n    margin-bottom: 2rem;\r\n\r\n    @media screen \r\n            and (max-device-width: 580px) \r\n            and (-webkit-min-device-pixel-ratio: 1) { \r\n                font-size: 3rem;\r\n    }\r\n`","import React from 'react';\r\nimport { useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport moment from 'moment'\r\nimport {convertToC} from '../../utils'\r\n// import {FiveDaysForecastStyle, DayStyle, DayStyleLineHeader, DayStyleLine} from './styles'\r\n\r\nvar days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\nconst FiveDaysForecast = ({currentCity}) => {\r\n    const isCelsius = useSelector((state) => state.degreeType.isCelsius)\r\n\r\n    return <ScrollWrapper>\r\n                <FiveDaysForecastStyle>\r\n                    {currentCity && currentCity.fiveDayaWeather && currentCity.fiveDayaWeather.DailyForecasts.map((weatherItem, index)=>{\r\n                        return  <DayStyle key={index}>\r\n                                    <DayStyleLineHeader>{days[(new Date(moment(weatherItem.Date)).getDay())]}</DayStyleLineHeader>\r\n                                    {/* <DayStyleLine><KeyStyle>Day:</KeyStyle> <ValueStyle>{weatherItem.Day.IconPhrase}</ValueStyle></DayStyleLine>\r\n                                    <DayStyleLine><KeyStyle>Night:</KeyStyle> <ValueStyle>{weatherItem.Night.IconPhrase}</ValueStyle></DayStyleLine> */}\r\n                                    <DayStyleLine><KeyStyle>Max:</KeyStyle>  \r\n                                        {isCelsius && <ValueStyle>{convertToC(weatherItem.Temperature.Maximum.Value)}°C</ValueStyle>}\r\n                                        {!isCelsius && <ValueStyle>{weatherItem.Temperature.Maximum.Value}°F</ValueStyle>}\r\n                                    </DayStyleLine>\r\n                                    <DayStyleLine><KeyStyle>Min:</KeyStyle> \r\n                                        {isCelsius && <ValueStyle>{convertToC(weatherItem.Temperature.Minimum.Value)}°C</ValueStyle>}\r\n                                        {!isCelsius && <ValueStyle>{weatherItem.Temperature.Minimum.Value}°F</ValueStyle>}\r\n                                    </DayStyleLine>\r\n\r\n                                </DayStyle>\r\n                    })}\r\n                </FiveDaysForecastStyle>\r\n            </ScrollWrapper>\r\n\r\n}\r\n\r\nexport default FiveDaysForecast\r\nconst KeyStyle = styled.div`\r\nmargin-right:0.5rem;\r\n`\r\nconst ValueStyle = styled.div`\r\n`\r\nconst ScrollWrapper= styled.div`\r\nposition: absolute;\r\nleft: 50%;\r\ntransform: translateX(-50%);\r\nwidth: 100%;\r\npadding: 2rem;\r\nz-index: 1;\r\nbottom: 0px;\r\nanimation-name: fadeIn;\r\nanimation-duration: 2s;\r\n/* animation-timing-function: ease-out; */\r\n@media screen \r\n        and (max-device-width: 580px) \r\n        and (-webkit-min-device-pixel-ratio: 1) { \r\n        }\r\n@media screen \r\n        and (min-device-width: 1049px) \r\n        and (-webkit-min-device-pixel-ratio: 1) { \r\n            /* bottom: 0px; */\r\n        }\r\n    @keyframes fadeIn {\r\n        0% {\r\n            bottom: -10%;\r\n            opacity: 0;\r\n        }\r\n        100% {\r\n            bottom: 0px;\r\n            opacity: 1;\r\n        }\r\n    }\r\n\r\n`\r\n\r\nexport const FiveDaysForecastStyle = styled.div`\r\n\r\n        display: flex;\r\n        justify-content: space-between;\r\n        /* margin-top:10rem; */\r\n        @media screen \r\n        and (max-device-width: 1049px) \r\n        and (-webkit-min-device-pixel-ratio: 1) { \r\n            overflow:scroll;\r\n            padding:1.5rem;\r\n        }\r\n`;\r\n\r\nexport const DayStyle = styled.div`        \r\n    padding: 2.5rem;\r\n    text-align:center;\r\n    font-size: 1.8rem;\r\n    height:15rem;\r\n    background-color:#ffffff;\r\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19); \r\n    flex-grow:1;\r\n    min-width:15rem;\r\n    width: 20%;\r\n    margin-right:2rem;\r\n    border-radius: 2rem;\r\n    /* letter-spacing: 0.1rem; */\r\n    font-weight: 400;\r\n`;\r\nexport const DayStyleLine = styled.div`\r\n    margin-bottom:1rem;\r\n    display:flex;\r\n    justify-content:center;\r\n    align-items: center;\r\n`;\r\nexport const DayStyleLineHeader = styled.div`\r\nmargin-bottom:1rem;\r\nfont-size: 2.5rem;\r\nfont-weight: 600;\r\n`;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {favoritesAction} from '../../actions/favoritesAction'\r\nimport styled from 'styled-components'\r\nimport TodayWeather from './todayWeather';\r\nimport FiveDaysForecast from './fiveDaysforecast';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\nconst CurrentCityWeather = () => {\r\n    const dispatch = useDispatch()\r\n    const {data: currentCity} = useSelector((state) => state.currentCity)\r\n    const favorites = useSelector((state) => state.favorites.data)\r\n\r\n    return <CurrentCityWeatherStyle>\r\n                <TodayWeather currentCity={currentCity} favorites={favorites}/>\r\n                <FiveDaysForecast currentCity={currentCity}/>\r\n            </CurrentCityWeatherStyle>\r\n}\r\n\r\nexport default CurrentCityWeather\r\n\r\nconst CurrentCityWeatherStyle = styled.div`\r\n    margin-top:5rem;\r\n    @media screen \r\n            and (max-device-width: 580px) \r\n            and (-webkit-min-device-pixel-ratio: 1) {     \r\n            margin-top:10rem;\r\n    }\r\n`","import React from 'react';\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport styled from 'styled-components'\r\nimport CurrentCityWeather from '../currentCityWeather/currentCityWeather.js'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nconst Home = () => {\r\n    const currentCity = useSelector((state) => state.currentCity)\r\n\r\n    return <HomeWrapper>\r\n            {currentCity.loading || currentCity.data === null ? \r\n            <SpinnerWrapper>\r\n                <CircularProgress color='inherit' size='6rem' /> \r\n                <SpinnerText>Loading weather data...</SpinnerText>\r\n            </SpinnerWrapper> \r\n            : \r\n              <CurrentCityWeather />}\r\n           </HomeWrapper>\r\n}\r\n\r\nexport default Home\r\n\r\nconst HomeWrapper = styled.div`\r\n/* text-align:center; */\r\n`\r\nexport const SpinnerWrapper = styled.div`\r\n    position: absolute;\r\n    left:50%;\r\n    top:50%;\r\n    transform: translate(-50%,-50%);\r\n    text-align:center;\r\n    color:#ffffff;\r\n`\r\nexport const SpinnerText = styled.div`\r\nmargin-top:1rem;\r\ncolor:#ffffff;\r\nfont-size:3rem;\r\n    @media screen \r\n            and (max-device-width: 580px) \r\n            and (-webkit-min-device-pixel-ratio: 1) { \r\n                font-size:2rem;\r\n    }\r\n`\r\n\r\n"],"sourceRoot":""}