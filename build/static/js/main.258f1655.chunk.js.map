{"version":3,"sources":["actions/notificationAction.js","pictures/appLogo.png","components/searchBar/searchBar.js","actions/degreeAction.js","components/menuBar/menuBar.js","actions/geoPositionAction.js","geoLocationAPI.js","components/Notifier/Notifier.js","App.js","serviceWorker.js","index.js","actions/types.js","reducers/geoLocationReducer.js","reducers/geoPositionReducer.js","reducers/autoCompleteSearchReducer.js","reducers/currentCityReducer.js","reducers/favoritesReducer.js","reducers/notificationReducer.js","reducers/degreeReducer.js","reducers/index.js","store.js","apiMap.js","config.js","actions/currentCityAction.js","actions/favoritesAction.js","actions/autoCompleteAction.js","utils.js"],"names":["enqueueSnackbarAction","notification","key","options","type","ENQUEUE_SNACKBAR","Date","getTime","Math","random","closeSnackbarAction","CLOSE_SNACKBAR","dismissAll","removeSnackbar","REMOVE_SNACKBAR","enqueueSnackbar","closeSnackbar","module","exports","SearchBar","dispatch","useDispatch","useState","query","setQuery","isOpen","setIsOpen","isLoading","useSelector","state","autoComplete","loading","onBlur","e","setTimeout","SearchInput","placeholder","onChange","target","value","SET_AUTO_COMPLETE","payload","test","debounced","message","variant","autoHideDuration","action","Button","onClick","anchorOrigin","vertical","horizontal","onFocus","SpinnerWrapper","CircularProgress","size","onSelect","city","LocalizedName","currentCityAction","styled","input","span","CitiesList","props","CitiesListStyle","data","map","index","CityItem","div","changeDegreeType","CHANGE_DEGREE_TYPE","withRouter","pathname","history","location","MenuStyle","LogoStyle","src","require","width","height","SearchStyle","TempTypeButtom","class","name","id","for","LinkStyle","style","color","textDecoration","to","geoPositionSearch","crd","isDefaultLocation","a","geoPositionSearchLoading","config","isProduction","axios","get","geoPositionSearchAPI","Latitude","latitude","Longitude","longitude","res","SET_GEO_POSITION_KEY","geoPositionMockData_DefaultLocation","geoPositionMockData","console","error","geoPositionSearchError","LOADING_GEO_POSITION_KEY","err","ERROR_GEO_POSITION_KEY","Version","Key","Type","Rank","EnglishName","PrimaryPostalCode","Region","ID","Country","AdministrativeArea","Level","LocalizedType","EnglishType","CountryID","TimeZone","Code","Name","GmtOffset","IsDaylightSaving","NextOffsetChange","GeoPosition","Elevation","Metric","Value","Unit","UnitType","Imperial","IsAlias","SupplementalAdminAreas","DataSets","GeoLocation","store","LOADING_GEO_LOCATION","navigator","geolocation","getCurrentPosition","pos","coords","log","accuracy","SET_GEO_LOCATION","ERROR_GEO_LOCATION","warn","code","enableHighAccuracy","timeout","maximumAge","displayed","Notifier","notifications","useSnackbar","React","useEffect","forEach","dismissed","includes","onClose","event","reason","myKey","onExited","filter","Home","lazy","Favorites","localStorage","favorites","setFavorites","JSON","parse","App","maxSnack","fallback","path","component","exact","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister","LOADING_AUTO_COMPLETE","ERROR_AUTO_COMPLETE","SET_WEATHER_BY_KEY","LOADING_WEATHER_BY_KEY","ERROR_WEATHER_BY_KEY","REMOVE_FROM_FAVORITES","ADD_TO_FAVORITES","SET_FAVORITES","LOADING_FAVORITES_WAETHER","SET_FAVORITES_WEATHER","ERROR_FAVORITES_WAETHER","initialState","errors","setLocalStorage","setItem","stringify","defaultState","isCelsius","combineReducers","geoLocation","geoPosition","currentCity","newData","cityInfo","degreeType","middleware","thunk","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","BASE_URL","API_KEY","autoCompleteSearch","weatherByKey","fiveDatysForecasts","currentCityLoading","Promise","all","weatherByKeyAPI","fiveDatysForecastsAPI","todayWeather","fiveDayaWeather","weatherByKeyMockData","currentCityError","LocalObservationDateTime","EpochTime","WeatherText","WeatherIcon","HasPrecipitation","PrecipitationType","IsDayTime","Temperature","MobileLink","Link","Headline","EffectiveDate","EffectiveEpochDate","Severity","Text","Category","EndDate","EndEpochDate","DailyForecasts","EpochDate","Minimum","Maximum","Day","Icon","IconPhrase","Night","Sources","PrecipitationIntensity","favoritesAction","add","fetchFavoritesWeather","fetchFavoritesWeatherLoading","asyncRequests","favorite","push","favoriteWeather","FavoritesWeatherMockData","fetchFavoritesWeatherError","autoCompleteSearchLoading","autoCompleteSearchError","mockAutoCompleteData","_","autoCompleteSearchAPI","convertToF","celsius","fahrenheit","round","convertToC"],"mappings":"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","file":"static/js/main.258f1655.chunk.js","sourcesContent":["import {ENQUEUE_SNACKBAR,CLOSE_SNACKBAR,REMOVE_SNACKBAR} from './types'\r\n\r\nexport const enqueueSnackbarAction = (notification) => {\r\n    const key = notification.options && notification.options.key;\r\n\r\n    return {\r\n        type: ENQUEUE_SNACKBAR,\r\n        notification: {\r\n            ...notification,\r\n            key: key || new Date().getTime() + Math.random(),\r\n        },\r\n    };\r\n};\r\n\r\nexport const closeSnackbarAction = key => ({\r\n    type: CLOSE_SNACKBAR,\r\n    dismissAll: !key, // dismiss all if no key has been defined\r\n    key,\r\n});\r\n\r\nexport const removeSnackbar = key => ({\r\n    type: REMOVE_SNACKBAR,\r\n    key,\r\n});\r\n\r\nexport const  enqueueSnackbar = (...args) => enqueueSnackbarAction(...args);\r\nexport const  closeSnackbar = (...args) => closeSnackbarAction(...args);","module.exports = __webpack_public_path__ + \"static/media/appLogo.ce57e147.png\";","import React, {useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {debounced} from '../../utils'\r\nimport {currentCityAction} from '../../actions/currentCityAction'\r\nimport {SET_AUTO_COMPLETE} from '../../actions/types'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport styled from 'styled-components';\r\nimport {\r\n    enqueueSnackbar,closeSnackbar,\r\n  } from '../../actions/notificationAction';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst SearchBar = () => {\r\n    const dispatch = useDispatch()\r\n    const [query, setQuery] = useState('')\r\n    const [isOpen,setIsOpen] = useState(false)\r\n    const autoComplete = useSelector((state) => state.autoComplete)\r\n    const isLoading = autoComplete.loading;\r\n\r\n    const onSelect = (city) => {\r\n        setQuery(city.LocalizedName)\r\n        setIsOpen(false)\r\n        dispatch(currentCityAction(city))\r\n    }\r\n\r\n    const onQueryChange = (e) => {\r\n        const query= e.target.value\r\n\r\n        if(query === '') {\r\n            setIsOpen(false)\r\n            setQuery(query)\r\n            dispatch({\r\n                type: SET_AUTO_COMPLETE,\r\n                payload: null\r\n            });\r\n        }\r\n\r\n        else if(/^[a-zA-Z\\s]+$/.test(query)){\r\n            if(query !== '') {\r\n                setQuery(query)\r\n                !isOpen && setIsOpen(true)\r\n                debounced(query)\r\n            }\r\n        }\r\n        else {\r\n            dispatch(enqueueSnackbar(\r\n                                            {\r\n                                                message: 'Invalid input. accept only english letters',\r\n                                                options: {\r\n                                                    key: new Date().getTime() + Math.random(),\r\n                                                    variant: 'error',\r\n                                                    autoHideDuration: 5000,\r\n                                                    action: key => (\r\n                                                        <Button onClick={() => dispatch(closeSnackbar(key))}>Close</Button>\r\n                                                    ),\r\n                                                    anchorOrigin: {\r\n                                                        vertical: 'top',\r\n                                                        horizontal: 'left',\r\n                                                    },\r\n                                                },\r\n                                            }\r\n                                    )\r\n                    )\r\n            //alert('Only english letters allowed')\r\n        }\r\n    }\r\n\r\n    return <div onBlur={(e)=>{setTimeout(()=>setIsOpen(false),100)}}>\r\n                        <SearchInput placeholder={'Search City'} onChange={onQueryChange} value={query} onFocus={(e)=>query !== '' && setIsOpen(true)}/>\r\n                        {isLoading ? <SpinnerWrapper><CircularProgress size={20}/></SpinnerWrapper> :\r\n                        isOpen && <CitiesList onSelect={onSelect}/>}\r\n            </div>\r\n}\r\n\r\nexport default SearchBar\r\n\r\nconst SearchInput = styled.input`\r\n    border: 1px solid black;\r\n    border-radius: 3px;\r\n    font-size: 2rem;\r\n    padding: 1rem;\r\n`;\r\nconst SpinnerWrapper = styled.span`\r\n    position:absolute;\r\n    right:20px;\r\n    top:12px;\r\n`;\r\n\r\nconst CitiesList = (props) => {\r\n    const autoComplete = useSelector((state) => state.autoComplete)\r\n\r\n    return <CitiesListStyle>{!autoComplete.loading && autoComplete.data && autoComplete.data.map((city, index)=>{\r\n                return <CityItem key={index} onClick={(e)=>props.onSelect(city)}><h3>{city.LocalizedName}</h3></CityItem>\r\n            })}\r\n    </CitiesListStyle>\r\n}\r\n\r\nconst CitiesListStyle = styled.div`\r\n    position: absolute;\r\n    z-index:1000;\r\n    animation-name: dropDownSlow;\r\n    animation-duration: 4s;\r\n    animation-timing-function: ease-out;\r\n    z-index: 1;\r\n    @keyframes dropDownSlow {\r\n        0% {\r\n            height: 0px;\r\n        }\r\n        100% {\r\n            height:100px;\r\n        }\r\n    }\r\n`\r\n\r\nconst CityItem = styled.div`\r\n    text-align: center;\r\n    border: 1px solid black;\r\n    border-radius: 3px;\r\n    background-color:white;\r\n    width:26.5rem;\r\n    font-size: 1.5rem;\r\n    padding: 1rem;\r\n    cursor: pointer;\r\n    :hover {\r\n        background-color: gainsboro;\r\n    }\r\n`;","import {CHANGE_DEGREE_TYPE} from '../actions/types'\r\n\r\nconst changeDegreeType = () => {\r\n    return {\r\n        type: CHANGE_DEGREE_TYPE\r\n    }\r\n}\r\n\r\nexport default changeDegreeType;","import React from 'react';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from 'styled-components'\r\nimport SearchBar from '../searchBar/searchBar.js';\r\nimport changeDegreeType from '../../actions/degreeAction'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst MenuBar = (props) => {\r\n    const dispatch = useDispatch()\r\n    const {pathname} = props.history.location\r\n\r\n    const handleToggle = (e) => {\r\n        dispatch(changeDegreeType())\r\n    }\r\nreturn <MenuStyle>\r\n           <LogoStyle>\r\n            <img src={require(\"../../pictures/appLogo.png\")} width=\"100px\" height=\"100px\" />            \r\n       </LogoStyle>\r\n       {pathname !== '/favorites' ? <SearchStyle><SearchBar/></SearchStyle> : null}\r\n       <TempTypeButtom>\r\n       <div class=\"onoffswitch\">\r\n            <input type=\"checkbox\" name=\"onoffswitch\" class=\"onoffswitch-checkbox\" id=\"myonoffswitch\" onChange={handleToggle}/>\r\n            <label class=\"onoffswitch-label\" for=\"myonoffswitch\">\r\n                <span class=\"onoffswitch-inner\"></span>\r\n                <span class=\"onoffswitch-switch\"></span>\r\n            </label>\r\n      </div>  \r\n                            {/* <label className=\"switch\">\r\n                                <input type=\"checkbox\" onChange={handleToggle}/>\r\n                                <span className=\"slider round\"></span>\r\n                            </label> */}\r\n        </TempTypeButtom>\r\n        <LinkStyle>\r\n            {pathname === '/favorites' ? \r\n              <Link style={{color:'#ffffff' , textDecoration: \"none\"}} to=\"/\">Home</Link>\r\n            : <Link style={{color: '#ffffff', textDecoration: \"none\"}} to=\"/favorites\">Favorites</Link>}\r\n       </LinkStyle>\r\n       </MenuStyle>\r\n}\r\n\r\nexport default withRouter(MenuBar)\r\n\r\n    const SearchStyle = styled.div`\r\n    z-index: 3;\r\n    position:absolute;\r\n    top:50%;\r\n    transform: translate(-50%, -50%);\r\n    left:50%;\r\n\r\n    @media screen \r\n            and (max-device-width: 580px) \r\n            and (-webkit-min-device-pixel-ratio: 1) { \r\n                top:150%;\r\n    }\r\n`\r\nconst MenuStyle = styled.div`\r\n    position:relative;\r\n    display:flex;\r\n    width: 100%;\r\n    height:8rem;\r\n    padding:4rem;\r\n    @media screen \r\n            and (max-device-width: 768px) \r\n            and (-webkit-min-device-pixel-ratio: 1) { \r\n                /* font-size:2.5rem; */\r\n    }\r\n`;\r\n\r\nconst LinkStyle = styled.div`\r\nfont-size:2.5rem;\r\nposition:absolute;\r\ntop:50%;\r\ntransform: translateY(-50%);\r\nright:0rem;\r\nanimation: RightToLeft 2s;\r\n    @keyframes RightToLeft {\r\n            0% {\r\n                right:-3rem;\r\n                opacity: 0;\r\n            }\r\n            50% {\r\n                right: 1rem;\r\n                opacity: 0.8;\r\n            }\r\n            100% {\r\n                right:0rem;\r\n                opacity: 1;\r\n            }\r\n    }\r\n`;\r\nconst LogoStyle = styled.div`\r\n    position:absolute;\r\n    top:50%;\r\n    transform: translateY(-43%);\r\n    left:-1.6rem;\r\n\r\n    animation: leftToRight 2s;\r\n    @keyframes leftToRight {\r\n            0% {\r\n                left:-3rem;\r\n                opacity: 0;\r\n            }\r\n            50% {\r\n                left:-0.6rem;\r\n                opacity: 0.8;\r\n            }\r\n            100% {\r\n                left:-1.6rem;\r\n                opacity: 1;\r\n            }\r\n    }\r\n`;\r\n\r\nconst TempTypeButtom = styled.div`\r\n    position:absolute;\r\n    top:50%;\r\n    right:50%;\r\n    transform: translate(50%, -50%);\r\n    @media screen \r\n            and (min-device-width: 580px) \r\n            and (-webkit-min-device-pixel-ratio: 1) { \r\n                font-size:2rem;\r\n                top:120%;\r\n                right:0%;\r\n                transform: translate(0%,-50%);\r\n    }\r\n`","import {geoPositionSearch as geoPositionSearchAPI} from '../apiMap'\r\nimport {currentCityAction} from '../actions/currentCityAction'\r\nimport {SET_GEO_POSITION_KEY, LOADING_GEO_POSITION_KEY, ERROR_GEO_POSITION_KEY} from '../actions/types'\r\nimport axios from 'axios'\r\nimport config from '../config';\r\n\r\nexport const geoPositionSearch = (crd, isDefaultLocation) => {\r\n  return async (dispatch) => {\r\n    dispatch(geoPositionSearchLoading(true));\r\n    try {\r\n      // THIS IS WORKING API CALL, REMOVE ON PRODUCTION\r\n      if ( config.isProduction ) {\r\n        const res = await axios.get(geoPositionSearchAPI({Latitude: crd.latitude, Longitude: crd.longitude}))\r\n        dispatch({\r\n          type: SET_GEO_POSITION_KEY,\r\n          payload: isDefaultLocation ? geoPositionMockData_DefaultLocation : res.data\r\n        });\r\n        dispatch(geoPositionSearchLoading(false));\r\n        dispatch(currentCityAction((isDefaultLocation ? geoPositionMockData_DefaultLocation : res.data)));\r\n      }\r\n      else {\r\n        dispatch({\r\n          type: SET_GEO_POSITION_KEY,\r\n          payload: isDefaultLocation ? geoPositionMockData_DefaultLocation : geoPositionMockData\r\n        });\r\n        dispatch(geoPositionSearchLoading(false));\r\n        dispatch(currentCityAction(isDefaultLocation ? geoPositionMockData_DefaultLocation : geoPositionMockData))\r\n      }\r\n  \r\n    }\r\n    catch (err) {\r\n      console.error(err.message);\r\n      dispatch(geoPositionSearchError(err));\r\n      dispatch(geoPositionSearchLoading(false));\r\n    }\r\n  };\r\n};\r\n\r\nexport const geoPositionSearchLoading = (isLoading) => {\r\n    return {\r\n      type: LOADING_GEO_POSITION_KEY,\r\n      payload: isLoading\r\n    };\r\n};\r\n\r\nexport const geoPositionSearchError = (err) => (dispatch) => {\r\n  return {\r\n    type: ERROR_GEO_POSITION_KEY,\r\n    payload: err\r\n  };\r\n};\r\n\r\nconst geoPositionMockData = {\r\n    Version: 1,\r\n    Key: '212568',\r\n    Type: 'City',\r\n    Rank: 75,\r\n    LocalizedName: 'Porat',\r\n    EnglishName: 'Porat',\r\n    PrimaryPostalCode: '',\r\n    Region: {\r\n      ID: 'MEA',\r\n      LocalizedName: 'Middle East',\r\n      EnglishName: 'Middle East'\r\n    },\r\n    Country: {\r\n      ID: 'IL',\r\n      LocalizedName: 'Israel',\r\n      EnglishName: 'Israel'\r\n    },\r\n    AdministrativeArea: {\r\n      ID: 'M',\r\n      LocalizedName: 'Central District',\r\n      EnglishName: 'Central District',\r\n      Level: 1,\r\n      LocalizedType: 'District',\r\n      EnglishType: 'District',\r\n      CountryID: 'IL'\r\n    },\r\n    TimeZone: {\r\n      Code: 'IDT',\r\n      Name: 'Asia/Jerusalem',\r\n      GmtOffset: 3,\r\n      IsDaylightSaving: true,\r\n      NextOffsetChange: '2020-10-24T23:00:00Z'\r\n    },\r\n    GeoPosition: {\r\n      Latitude: 32.267,\r\n      Longitude: 34.95,\r\n      Elevation: {\r\n        Metric: {\r\n          Value: 80,\r\n          Unit: 'm',\r\n          UnitType: 5\r\n        },\r\n        Imperial: {\r\n          Value: 262,\r\n          Unit: 'ft',\r\n          UnitType: 0\r\n        }\r\n      }\r\n    },\r\n    IsAlias: false,\r\n    SupplementalAdminAreas: [],\r\n    DataSets: [\r\n      'AirQualityCurrentConditions',\r\n      'AirQualityForecasts',\r\n      'Alerts',\r\n      'ForecastConfidence'\r\n    ]\r\n  }\r\n\r\n\r\n  const geoPositionMockData_DefaultLocation = {\r\n    Version: 1,\r\n    Key: '212568',\r\n    Type: 'City',\r\n    Rank: 75,\r\n    LocalizedName: 'Tel Aviv',\r\n    EnglishName: 'Tel Aviv',\r\n    PrimaryPostalCode: '',\r\n    Region: {\r\n      ID: 'MEA',\r\n      LocalizedName: 'Middle East',\r\n      EnglishName: 'Middle East'\r\n    },\r\n    Country: {\r\n      ID: 'IL',\r\n      LocalizedName: 'Israel',\r\n      EnglishName: 'Israel'\r\n    },\r\n    AdministrativeArea: {\r\n      ID: 'M',\r\n      LocalizedName: 'Central District',\r\n      EnglishName: 'Central District',\r\n      Level: 1,\r\n      LocalizedType: 'District',\r\n      EnglishType: 'District',\r\n      CountryID: 'IL'\r\n    },\r\n    TimeZone: {\r\n      Code: 'IDT',\r\n      Name: 'Asia/Jerusalem',\r\n      GmtOffset: 3,\r\n      IsDaylightSaving: true,\r\n      NextOffsetChange: '2020-10-24T23:00:00Z'\r\n    },\r\n    GeoPosition: {\r\n      Latitude: 32.267,\r\n      Longitude: 34.95,\r\n      Elevation: {\r\n        Metric: {\r\n          Value: 80,\r\n          Unit: 'm',\r\n          UnitType: 5\r\n        },\r\n        Imperial: {\r\n          Value: 262,\r\n          Unit: 'ft',\r\n          UnitType: 0\r\n        }\r\n      }\r\n    },\r\n    IsAlias: false,\r\n    SupplementalAdminAreas: [],\r\n    DataSets: [\r\n      'AirQualityCurrentConditions',\r\n      'AirQualityForecasts',\r\n      'Alerts',\r\n      'ForecastConfidence'\r\n    ]\r\n  }","import store from \"./store\";\r\nimport { SET_GEO_LOCATION, LOADING_GEO_LOCATION,ERROR_GEO_LOCATION } from './actions/types'\r\nimport {geoPositionSearch} from './actions/geoPositionAction'\r\n\r\nconst GeoLocation = () => {\r\n    store.dispatch(geoPositionSearch({latitude: 32.0853,longitude: 34.7818}, true)) // default Tel aviv\r\n\r\n    var options = {\r\n      enableHighAccuracy: true,\r\n      timeout: 5000,\r\n      maximumAge: 0\r\n    };\r\n    \r\n    function success(pos) {\r\n      var crd = pos.coords;\r\n    \r\n      console.log('Your current position is:');\r\n      console.log(`Latitude : ${crd.latitude}`);\r\n      console.log(`Longitude: ${crd.longitude}`);\r\n      console.log(`More or less ${crd.accuracy} meters.`);\r\n    \r\n      store.dispatch({type: SET_GEO_LOCATION, payload: {Latitude: crd.latitude,Longitude: crd.longitude}})\r\n      store.dispatch({type: LOADING_GEO_LOCATION, payload: false})\r\n      store.dispatch(geoPositionSearch({latitude: crd.latitude,longitude: crd.longitude}))\r\n    }\r\n    \r\n    function error(err) {\r\n       store.dispatch({type: ERROR_GEO_LOCATION, payload: err.message})\r\n       store.dispatch({type: LOADING_GEO_LOCATION, payload: false})\r\n\r\n      console.warn(`ERROR(${err.code}): ${err.message}`);\r\n    }\r\n    store.dispatch({type: LOADING_GEO_LOCATION, payload: true})\r\n    navigator.geolocation.getCurrentPosition(success, error, options);\r\n}\r\n\r\nexport default GeoLocation","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useSnackbar } from 'notistack';\r\nimport { removeSnackbar } from '../../actions/notificationAction';\r\n\r\nlet displayed = [];\r\n\r\nconst Notifier = () => {\r\n    const dispatch = useDispatch();\r\n    const notifications = useSelector(state => state.notifications.notifications || []);\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n    const storeDisplayed = (id) => {\r\n        displayed = [...displayed, id];\r\n    };\r\n\r\n    const removeDisplayed = (id) => {\r\n        displayed = [...displayed.filter(key => id !== key)];\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        notifications.forEach(({ key, message, options = {}, dismissed = false }) => {\r\n            if (dismissed) {\r\n                // dismiss snackbar using notistack\r\n                closeSnackbar(key);\r\n                return;\r\n            }\r\n\r\n            // do nothing if snackbar is already displayed\r\n            if (displayed.includes(key)) return;\r\n\r\n            // display snackbar using notistack\r\n            enqueueSnackbar(message, {\r\n                key,\r\n                ...options,\r\n                onClose: (event, reason, myKey) => {\r\n                    if (options.onClose) {\r\n                        options.onClose(event, reason, myKey);\r\n                    }\r\n                },\r\n                onExited: (event, myKey) => {\r\n                    // removen this snackbar from redux store\r\n                    dispatch(removeSnackbar(myKey));\r\n                    removeDisplayed(myKey);\r\n                },\r\n            });\r\n\r\n            // keep track of snackbars that we've displayed\r\n            storeDisplayed(key);\r\n        });\r\n    }, [notifications, closeSnackbar, enqueueSnackbar, dispatch]);\r\n\r\n    return null;\r\n};\r\n\r\nexport default Notifier;\r\n","import React, {lazy, Suspense} from 'react';\r\nimport './App.css';\r\nimport Menu from './components/menuBar/menuBar.js'\r\n// import Home from './components/home/home.js'\r\n// import Favorites from './components/favorites/favorites.js'\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport GeoLocation from './geoLocationAPI'\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport {setFavorites} from './actions/favoritesAction'\r\nimport { SnackbarProvider } from 'notistack';\r\nimport Notifier from './components/Notifier/Notifier';\r\n\r\nconst Home = lazy(() => import('./components/home/home.js'));\r\nconst Favorites = lazy(() => import('./components/favorites/favorites.js'));\r\n\r\nGeoLocation()\r\n\r\nif (localStorage.favorites) {\r\n  store.dispatch(setFavorites(JSON.parse(localStorage.favorites)));\r\n}\r\n\r\nfunction App () {\r\n    return (\r\n    <Provider store={store}>\r\n      <SnackbarProvider maxSnack={4}>\r\n      <Notifier />\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n          <BrowserRouter>\r\n              <Menu/>\r\n              <Route\r\n                path=\"/\"\r\n                component={Home}\r\n                exact\r\n              />\r\n              <Route\r\n                path=\"/favorites\"\r\n                component={Favorites}\r\n                exact\r\n              />\r\n          </BrowserRouter>\r\n        </Suspense>\r\n      </SnackbarProvider>\r\n    </Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const SET_GEO_LOCATION = \"SET_GEO_LOCATION\";\r\nexport const LOADING_GEO_LOCATION = \"LOADING_GEO_LOCATION\";\r\nexport const ERROR_GEO_LOCATION = \"ERROR_GEO_LOCATION\";\r\n\r\nexport const SET_GEO_POSITION_KEY = \"SET_GEO_POSITION_KEY\";\r\nexport const LOADING_GEO_POSITION_KEY = \"LOADING_GEO_POSITION_KEY\";\r\nexport const ERROR_GEO_POSITION_KEY = \"LOADING_GEO_POSITION_KEY\";\r\n\r\nexport const SET_AUTO_COMPLETE = \"SET_AUTO_COMPLETE\";\r\nexport const LOADING_AUTO_COMPLETE = \"LOADING_AUTO_COMPLETE\";\r\nexport const ERROR_AUTO_COMPLETE = \"ERROR_AUTO_COMPLETE\";\r\n\r\nexport const SET_WEATHER_BY_KEY = \"SET_WEATHER_BY_KEY\";\r\nexport const LOADING_WEATHER_BY_KEY = \"LOADING_WEATHER_BY_KEY\";\r\nexport const ERROR_WEATHER_BY_KEY = \"ERROR_WEATHER_BY_KEY\";\r\n\r\nexport const REMOVE_FROM_FAVORITES = \"REMOVE_FROM_FAVORITES\";\r\nexport const ADD_TO_FAVORITES = \"ADD_TO_FAVORITES\";\r\nexport const NOTIFICATION_ADD_FAVORITES_SUCCESS = \"NOTIFICATION_ADD_FAVORITES_SUCCESS\";\r\nexport const NOTIFICATION_REMOVE_FAVORITES_SUCCESS = \"NOTIFICATION_REMOVE_FAVORITES_SUCCESS\";\r\n\r\n\r\nexport const SET_FAVORITES = \"SET_FAVORITES\";\r\nexport const LOADING_FAVORITES_WAETHER = \"LOADING_FAVORITES_WAETHER\";\r\nexport const SET_FAVORITES_WEATHER = \"SET_FAVORITES_WEATHER\";\r\nexport const ERROR_FAVORITES_WAETHER = \"ERROR_FAVORITES_WAETHER\";\r\n\r\nexport const ENQUEUE_SNACKBAR = 'ENQUEUE_SNACKBAR';\r\nexport const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR';\r\nexport const REMOVE_SNACKBAR = 'REMOVE_SNACKBAR';\r\n\r\nexport const CHANGE_DEGREE_TYPE = 'CHANGE_DEGREE_TYPE';","import {\r\n    SET_GEO_LOCATION,LOADING_GEO_LOCATION,ERROR_GEO_LOCATION\r\n  } from \"../actions/types\";\r\n  \r\n  const initialState = {\r\n    Latitude: null,\r\n    Longitude: null,\r\n    loading: false,\r\n    errors: []\r\n  };\r\n  \r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_GEO_LOCATION:\r\n                return {\r\n                    ...state,\r\n                    Latitude: action.payload.Latitude,\r\n                    Longitude: action.payload.Longitude\r\n                };\r\n        case LOADING_GEO_LOCATION:\r\n                return {\r\n                    ...state,\r\n                    loading: action.payload\r\n                };\r\n        case ERROR_GEO_LOCATION:\r\n                return {\r\n                    ...state,\r\n                    errors: [...state.errors, action.payload]\r\n                };\r\n        default:\r\n                return state;\r\n    }\r\n  }","import {SET_GEO_POSITION_KEY, LOADING_GEO_POSITION_KEY, ERROR_GEO_POSITION_KEY} from '../actions/types'\r\n\r\n  \r\n  const initialState = {\r\n    data: null,\r\n    loading: false,\r\n    errors: []\r\n  };\r\n  \r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_GEO_POSITION_KEY:\r\n                return {\r\n                    ...state,\r\n                    data: action.payload,\r\n                };\r\n        case LOADING_GEO_POSITION_KEY:\r\n                return {\r\n                    ...state,\r\n                    loading: action.payload\r\n                };\r\n        case ERROR_GEO_POSITION_KEY:\r\n                return {\r\n                    ...state,\r\n                    errors: [...state.errors, action.payload]\r\n                };\r\n        default:\r\n                return state;\r\n    }\r\n  }","import {SET_AUTO_COMPLETE, LOADING_AUTO_COMPLETE, ERROR_AUTO_COMPLETE} from '../actions/types'\r\n\r\n  \r\n  const initialState = {\r\n    data: null,\r\n    loading: false,\r\n    errors: []\r\n  };\r\n  \r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_AUTO_COMPLETE:\r\n                return {\r\n                    ...state,\r\n                    data: action.payload,\r\n                };\r\n        case LOADING_AUTO_COMPLETE:\r\n                return {\r\n                    ...state,\r\n                    loading: action.payload\r\n                };\r\n        case ERROR_AUTO_COMPLETE:\r\n                return {\r\n                    ...state,\r\n                    errors: [...state.errors, action.payload]\r\n                };\r\n        default:\r\n                return state;\r\n    }\r\n  }","import {SET_WEATHER_BY_KEY, LOADING_WEATHER_BY_KEY, ERROR_WEATHER_BY_KEY} from '../actions/types'\r\n\r\n  \r\n  const initialState = {\r\n    data: null,\r\n    loading: false,\r\n    errors: []\r\n  };\r\n  \r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_WEATHER_BY_KEY:\r\n                return {\r\n                    ...state,\r\n                    data: action.payload,\r\n                };\r\n        case LOADING_WEATHER_BY_KEY:\r\n                return {\r\n                    ...state,\r\n                    loading: action.payload\r\n                };\r\n        case ERROR_WEATHER_BY_KEY:\r\n                return {\r\n                    ...state,\r\n                    errors: [...state.errors, action.payload]\r\n                };\r\n        default:\r\n                return state;\r\n    }\r\n  }","import {ADD_TO_FAVORITES, REMOVE_FROM_FAVORITES, SET_FAVORITES, SET_FAVORITES_WEATHER,LOADING_FAVORITES_WAETHER, ERROR_FAVORITES_WAETHER} from '../actions/types'\r\n\r\n  \r\n  const initialState = {\r\n    data: [],\r\n    loading: false,\r\n    errors: []\r\n  };\r\n\r\n  const setLocalStorage = (favorites) => localStorage.setItem('favorites', JSON.stringify(favorites))\r\n  \r\n  export default function(state = initialState, action) {\r\n    let newData = []\r\n    switch (action.type) {\r\n        case ADD_TO_FAVORITES:\r\n            // if(state.data.length < 5) {\r\n                newData = [...state.data, action.payload]\r\n            // }\r\n            // else{\r\n            //     newData = [...state.data, action.payload]\r\n            //     newData.shift()\r\n            // }\r\n            setLocalStorage(newData)\r\n                return {\r\n                    ...state,\r\n                    data: newData,\r\n                };\r\n        case REMOVE_FROM_FAVORITES: \r\n                newData = state.data.filter((city)=>city.cityInfo.Key !== action.payload.cityInfo.Key)\r\n                setLocalStorage(newData)\r\n\r\n                return {\r\n                    ...state,\r\n                    data: newData\r\n                };\r\n        case SET_FAVORITES: \r\n                return {\r\n                    ...state,\r\n                    data: action.payload\r\n                }; \r\n        case SET_FAVORITES_WEATHER:\r\n                return {\r\n                    ...state,\r\n                    data: action.payload\r\n                };\r\n        case LOADING_FAVORITES_WAETHER:\r\n                return {\r\n                    ...state,\r\n                     loading: action.payload\r\n                }; \r\n        case ERROR_FAVORITES_WAETHER:\r\n                return {\r\n                    ...state,\r\n                    errors: [...state.errors,action.payload]\r\n                }                        \r\n        default:\r\n                return state;\r\n    }\r\n  }","import {ENQUEUE_SNACKBAR,CLOSE_SNACKBAR,REMOVE_SNACKBAR} from '../actions/types'\r\n\r\nconst defaultState = {\r\n    notifications: [],\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case ENQUEUE_SNACKBAR:\r\n            return {\r\n                ...state,\r\n                notifications: [\r\n                    ...state.notifications,\r\n                    {\r\n                        key: action.key,\r\n                        ...action.notification,\r\n                    },\r\n                ],\r\n            };\r\n\r\n        case CLOSE_SNACKBAR:\r\n            return {\r\n                ...state,\r\n                notifications: state.notifications.map(notification => (\r\n                    (action.dismissAll || notification.key === action.key)\r\n                        ? { ...notification, dismissed: true }\r\n                        : { ...notification }\r\n                )),\r\n            };\r\n\r\n        case REMOVE_SNACKBAR:\r\n            return {\r\n                ...state,\r\n                notifications: state.notifications.filter(\r\n                    notification => notification.key !== action.key,\r\n                ),\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import {NOTIFICATION_ADD_FAVORITES_SUCCESS, NOTIFICATION_REMOVE_FAVORITES_SUCCESS} from '../actions/types'\r\n\r\n  \r\n//   const initialState = {\r\n//     messages: []\r\n//   };\r\n  \r\n//   export default function(state = initialState, action) {\r\n//       let message = ''\r\n//     switch (action.type) {\r\n//         case NOTIFICATION_ADD_FAVORITES_SUCCESS:\r\n//                 message = `${action.payload} added to favorites`\r\n//                 return {\r\n//                     ...state,\r\n//                     messages: [...state.messages, {type:'success', message}],\r\n//                 };\r\n//         case NOTIFICATION_REMOVE_FAVORITES_SUCCESS:\r\n//                 message = `${action.payload} removed from favorites`\r\n//                 return {\r\n//                     ...state,\r\n//                     messages: [...state.messages, {type:'success', message}],\r\n//                 };\r\n//         default:\r\n//                 return state;\r\n//     }\r\n//   }","import {CHANGE_DEGREE_TYPE} from '../actions/types'\r\n\r\n  \r\n  const initialState = {\r\n    isCelsius: true,\r\n  };\r\n  \r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case CHANGE_DEGREE_TYPE:\r\n                return {\r\n                    ...state,\r\n                    isCelsius: !state.isCelsius,\r\n                };\r\n        default:\r\n                return state;\r\n    }\r\n  }","import { combineReducers } from \"redux\";\r\nimport geoLocation from \"./geoLocationReducer\";\r\nimport geoPosition from './geoPositionReducer';\r\nimport autoCompleteSearch from './autoCompleteSearchReducer';\r\nimport currentCity from './currentCityReducer';\r\nimport favorites from './favoritesReducer';\r\nimport notifications from './notificationReducer';\r\nimport degreeReducer from './degreeReducer';\r\n\r\n\r\nexport default combineReducers({\r\n    geoLocation,\r\n    geoPosition,\r\n    autoComplete: autoCompleteSearch,\r\n    currentCity,\r\n    favorites,\r\n    notifications,\r\n    degreeType: degreeReducer,\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__\r\n      ? window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION__()\r\n      : f => f\r\n  )\r\n);\r\nexport default store;","const BASE_URL = \"https://dataservice.accuweather.com\"\r\nconst API_KEY = \"lriSh0MgYPuwlv7Hf3Zy1OJ0XzO3ZezC\"\r\n\r\nexport const geoPositionSearch = ({Latitude,Longitude}) => {\r\n    return `${BASE_URL}/locations/v1/cities/geoposition/search?apikey=${API_KEY}&q=${Latitude},${Longitude}`\r\n}\r\nexport const autoCompleteSearch = (query) => {\r\n    return `${BASE_URL}/locations/v1/cities/autocomplete?apikey=${API_KEY}&q=${query}`\r\n}\r\nexport const weatherByKey = (key) => {\r\n    return `${BASE_URL}/currentconditions/v1/${key}?apikey=${API_KEY}`\r\n}\r\nexport const fiveDatysForecasts = (key) => {\r\n    return `${BASE_URL}/forecasts/v1/daily/5day/${key}?apikey=${API_KEY}`\r\n}","module.exports = {\r\n    isProduction: false\r\n}","import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport {\r\n  enqueueSnackbar,closeSnackbar,\r\n} from './notificationAction';\r\nimport {fiveDatysForecasts as fiveDatysForecastsAPI, weatherByKey as weatherByKeyAPI} from '../apiMap'\r\n\r\nimport {SET_WEATHER_BY_KEY, LOADING_WEATHER_BY_KEY, ERROR_WEATHER_BY_KEY} from '../actions/types'\r\nimport axios from 'axios'\r\nimport config from '../config';\r\n\r\nexport const currentCityAction = (city) => async (dispatch) => {\r\n\r\n  dispatch(currentCityLoading(true))\r\n  try{\r\n\r\n    if (config.isProduction) {\r\n      const res = await Promise.all([axios.get(weatherByKeyAPI(city.Key)),axios.get(fiveDatysForecastsAPI(city.Key))])\r\n      const todayWeather = res[0].data[0]\r\n      const fiveDayaWeather = res[1].data\r\n  \r\n      dispatch({\r\n        type: SET_WEATHER_BY_KEY,\r\n        payload: {todayWeather,fiveDayaWeather,cityInfo:city}\r\n      });\r\n      dispatch(currentCityLoading(false))\r\n    }\r\n    else {\r\n      setTimeout(()=>{\r\n        dispatch({\r\n          type: SET_WEATHER_BY_KEY,\r\n          payload: {...weatherByKeyMockData, cityInfo:city}\r\n        });\r\n        dispatch(currentCityLoading(false))\r\n      },500)\r\n    }\r\n  }\r\n  catch(err){\r\n    dispatch(enqueueSnackbar({\r\n      message: 'error fetching weather information',\r\n      options: {\r\n          key: new Date().getTime() + Math.random(),\r\n          variant: 'error',\r\n          autoHideDuration: 2000,\r\n          action: key => (\r\n              <Button onClick={() => dispatch(closeSnackbar(key))}>dismiss me</Button>\r\n          ),\r\n      },\r\n    }))\r\n    console.error(err.message)\r\n    dispatch(currentCityError(err))\r\n    dispatch(currentCityLoading(false))\r\n  }\r\n};\r\n\r\nexport const currentCityLoading = (isLoading) => {\r\n    return {\r\n      type: LOADING_WEATHER_BY_KEY,\r\n      payload: isLoading\r\n    };\r\n};\r\n\r\nexport const currentCityError = (err) => (dispatch) => {\r\n  return {\r\n    type: ERROR_WEATHER_BY_KEY,\r\n    payload: err\r\n  };\r\n};\r\n\r\nconst weatherByKeyMockData = {\r\n    todayWeather: {\r\n      LocalObservationDateTime: '2020-03-28T00:35:00+03:00',\r\n      EpochTime: 1585344900,\r\n      WeatherText: 'Mostly clear',\r\n      WeatherIcon: 34,\r\n      HasPrecipitation: false,\r\n      PrecipitationType: null,\r\n      IsDayTime: false,\r\n      Temperature: {\r\n        Metric: {\r\n          Value: 16.9,\r\n          Unit: 'C',\r\n          UnitType: 17\r\n        },\r\n        Imperial: {\r\n          Value: 62,\r\n          Unit: 'F',\r\n          UnitType: 18\r\n        }\r\n      },\r\n      MobileLink: 'http://m.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us',\r\n      Link: 'http://www.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us'\r\n    },\r\n    fiveDayaWeather: {\r\n      Headline: {\r\n        EffectiveDate: '2020-03-28T08:00:00+03:00',\r\n        EffectiveEpochDate: 1585371600,\r\n        Severity: 5,\r\n        Text: 'Air quality will be unhealthy for sensitive groups Monday morning through Wednesday morning',\r\n        Category: 'rain',\r\n        EndDate: '2020-03-28T14:00:00+03:00',\r\n        EndEpochDate: 1585393200,\r\n        MobileLink: 'http://m.accuweather.com/en/il/porat/212568/extended-weather-forecast/212568?lang=en-us',\r\n        Link: 'http://www.accuweather.com/en/il/porat/212568/daily-weather-forecast/212568?lang=en-us'\r\n      },\r\n      DailyForecasts: [\r\n        {\r\n          Date: '2020-03-27T07:00:00+03:00',\r\n          EpochDate: 1585281600,\r\n          Temperature: {\r\n            Minimum: {\r\n              Value: 60,\r\n              Unit: 'F',\r\n              UnitType: 18\r\n            },\r\n            Maximum: {\r\n              Value: 76,\r\n              Unit: 'F',\r\n              UnitType: 18\r\n            }\r\n          },\r\n          Day: {\r\n            Icon: 2,\r\n            IconPhrase: 'Mostly sunny',\r\n            HasPrecipitation: false\r\n          },\r\n          Night: {\r\n            Icon: 35,\r\n            IconPhrase: 'Partly cloudy',\r\n            HasPrecipitation: false\r\n          },\r\n          Sources: [\r\n            'AccuWeather'\r\n          ],\r\n          MobileLink: 'http://m.accuweather.com/en/il/porat/212568/daily-weather-forecast/212568?lang=en-us',\r\n          Link: 'http://www.accuweather.com/en/il/porat/212568/daily-weather-forecast/212568?lang=en-us'\r\n        },\r\n        {\r\n          Date: '2020-03-28T07:00:00+03:00',\r\n          EpochDate: 1585368000,\r\n          Temperature: {\r\n            Minimum: {\r\n              Value: 56,\r\n              Unit: 'F',\r\n              UnitType: 18\r\n            },\r\n            Maximum: {\r\n              Value: 66,\r\n              Unit: 'F',\r\n              UnitType: 18\r\n            }\r\n          },\r\n          Day: {\r\n            Icon: 3,\r\n            IconPhrase: 'Partly sunny',\r\n            HasPrecipitation: true,\r\n            PrecipitationType: 'Rain',\r\n            PrecipitationIntensity: 'Light'\r\n          },\r\n          Night: {\r\n            Icon: 35,\r\n            IconPhrase: 'Partly cloudy',\r\n            HasPrecipitation: false\r\n          },\r\n          Sources: [\r\n            'AccuWeather'\r\n          ],\r\n          MobileLink: 'http://m.accuweather.com/en/il/porat/212568/daily-weather-forecast/212568?day=1&lang=en-us',\r\n          Link: 'http://www.accuweather.com/en/il/porat/212568/daily-weather-forecast/212568?day=1&lang=en-us'\r\n        },\r\n        {\r\n          Date: '2020-03-29T07:00:00+03:00',\r\n          EpochDate: 1585454400,\r\n          Temperature: {\r\n            Minimum: {\r\n              Value: 55,\r\n              Unit: 'F',\r\n              UnitType: 18\r\n            },\r\n            Maximum: {\r\n              Value: 66,\r\n              Unit: 'F',\r\n              UnitType: 18\r\n            }\r\n          },\r\n          Day: {\r\n            Icon: 2,\r\n            IconPhrase: 'Mostly sunny',\r\n            HasPrecipitation: false\r\n          },\r\n          Night: {\r\n            Icon: 33,\r\n            IconPhrase: 'Clear',\r\n            HasPrecipitation: false\r\n          },\r\n          Sources: [\r\n            'AccuWeather'\r\n          ],\r\n          MobileLink: 'http://m.accuweather.com/en/il/porat/212568/daily-weather-forecast/212568?day=2&lang=en-us',\r\n          Link: 'http://www.accuweather.com/en/il/porat/212568/daily-weather-forecast/212568?day=2&lang=en-us'\r\n        },\r\n        {\r\n          Date: '2020-03-30T07:00:00+03:00',\r\n          EpochDate: 1585540800,\r\n          Temperature: {\r\n            Minimum: {\r\n              Value: 60,\r\n              Unit: 'F',\r\n              UnitType: 18\r\n            },\r\n            Maximum: {\r\n              Value: 72,\r\n              Unit: 'F',\r\n              UnitType: 18\r\n            }\r\n          },\r\n          Day: {\r\n            Icon: 2,\r\n            IconPhrase: 'Mostly sunny',\r\n            HasPrecipitation: false\r\n          },\r\n          Night: {\r\n            Icon: 35,\r\n            IconPhrase: 'Partly cloudy',\r\n            HasPrecipitation: false\r\n          },\r\n          Sources: [\r\n            'AccuWeather'\r\n          ],\r\n          MobileLink: 'http://m.accuweather.com/en/il/porat/212568/daily-weather-forecast/212568?day=3&lang=en-us',\r\n          Link: 'http://www.accuweather.com/en/il/porat/212568/daily-weather-forecast/212568?day=3&lang=en-us'\r\n        },\r\n        {\r\n          Date: '2020-03-31T07:00:00+03:00',\r\n          EpochDate: 1585627200,\r\n          Temperature: {\r\n            Minimum: {\r\n              Value: 59,\r\n              Unit: 'F',\r\n              UnitType: 18\r\n            },\r\n            Maximum: {\r\n              Value: 81,\r\n              Unit: 'F',\r\n              UnitType: 18\r\n            }\r\n          },\r\n          Day: {\r\n            Icon: 3,\r\n            IconPhrase: 'Partly sunny',\r\n            HasPrecipitation: false\r\n          },\r\n          Night: {\r\n            Icon: 39,\r\n            IconPhrase: 'Partly cloudy w/ showers',\r\n            HasPrecipitation: true,\r\n            PrecipitationType: 'Rain',\r\n            PrecipitationIntensity: 'Light'\r\n          },\r\n          Sources: [\r\n            'AccuWeather'\r\n          ],\r\n          MobileLink: 'http://m.accuweather.com/en/il/porat/212568/daily-weather-forecast/212568?day=4&lang=en-us',\r\n          Link: 'http://www.accuweather.com/en/il/porat/212568/daily-weather-forecast/212568?day=4&lang=en-us'\r\n        }\r\n      ]\r\n    }\r\n  }","import { weatherByKey as weatherByKeyAPI} from '../apiMap'\r\nimport axios from 'axios'\r\nimport {\r\n  enqueueSnackbar,\r\n  closeSnackbar,\r\n} from './notificationAction';\r\nimport React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport config from '../config';\r\n\r\nimport {ADD_TO_FAVORITES, REMOVE_FROM_FAVORITES, SET_FAVORITES, LOADING_FAVORITES_WAETHER, SET_FAVORITES_WEATHER, ERROR_FAVORITES_WAETHER} from '../actions/types'\r\nexport const favoritesAction = (city, add) => (dispatch) => {\r\n\r\n    if (!add) {\r\n        dispatch({\r\n            type: REMOVE_FROM_FAVORITES,\r\n            payload: city\r\n          });\r\n\r\n\r\n              dispatch(enqueueSnackbar({\r\n                message: `${city.cityInfo.LocalizedName} removed from favorites`,\r\n                options: {\r\n                    key: new Date().getTime() + Math.random(),\r\n                    variant: 'warning',\r\n                    autoHideDuration: 2000,\r\n                    action: key => (\r\n                        <Button onClick={() => dispatch(closeSnackbar(key))}>dismiss me</Button>\r\n                    ),\r\n                },\r\n              }))\r\n    }\r\n    else {\r\n        dispatch({\r\n            type: ADD_TO_FAVORITES,\r\n            payload: city\r\n        });\r\n        dispatch(enqueueSnackbar({\r\n          message: `${city.cityInfo.LocalizedName} added to favorites`,\r\n          options: {\r\n              key: new Date().getTime() + Math.random(),\r\n              variant: 'success',\r\n              autoHideDuration: 2000,\r\n              action: key => (\r\n                  <Button onClick={() => dispatch(closeSnackbar(key))}>dismiss me</Button>\r\n              ),\r\n          },\r\n        }))\r\n    }\r\n};\r\n\r\nexport const setFavorites = (favorites) => {\r\n    return{\r\n        type: SET_FAVORITES,\r\n        payload: favorites\r\n    };\r\n}\r\n\r\nexport const fetchFavoritesWeather = (favorites) => async (dispatch) => {\r\n    dispatch(fetchFavoritesWeatherLoading(true))\r\n  // THIS IS WORKING API CALL, REMOVE ON PRODUCTION\r\n\r\n  try{\r\n    if ( config.isProduction) {\r\n      const asyncRequests = []\r\n      for(let favorite of favorites){\r\n          console.log(favorite.cityInfo.Key)\r\n          asyncRequests.push(axios.get(weatherByKeyAPI(favorite.cityInfo.Key)))\r\n      }\r\n      const res = await Promise.all(asyncRequests)\r\n      console.log(res)\r\n      dispatch({\r\n          type: SET_FAVORITES_WEATHER,\r\n          payload: res.map((favoriteWeather, index)=>{return {...favorites[index],todayWeather: favoriteWeather.data[0] }})\r\n      });\r\n      dispatch(fetchFavoritesWeatherLoading(false))\r\n\r\n    }\r\n    else{\r\n      setTimeout(()=>{\r\n        dispatch({\r\n          type: SET_FAVORITES_WEATHER,\r\n          payload: favorites.map((favorite, index)=>{return {...favorite, todayWeather: FavoritesWeatherMockData[index].data[0]}})\r\n        });\r\n        dispatch(fetchFavoritesWeatherLoading(false))\r\n\r\n      },500)\r\n    }\r\n  }\r\n    catch(e){\r\n      dispatch(enqueueSnackbar({\r\n        message: 'error fetching favorites weather information',\r\n        options: {\r\n            key: new Date().getTime() + Math.random(),\r\n            variant: 'error',\r\n            autoHideDuration: 2000,\r\n            action: key => (\r\n                <Button onClick={() => dispatch(closeSnackbar(key))}>dismiss me</Button>\r\n            ),\r\n        },\r\n      }))\r\n        // dispatch(fetchFavoritesWeatherLoading(false))\r\n        dispatch(fetchFavoritesWeatherError(e))\r\n\r\n  }\r\n}\r\n\r\nexport const fetchFavoritesWeatherLoading = (isLoading) => {\r\n    return {\r\n      type: LOADING_FAVORITES_WAETHER,\r\n      payload: isLoading\r\n    };\r\n};\r\n\r\nexport const fetchFavoritesWeatherError = (err) => {\r\n    return {\r\n      type: ERROR_FAVORITES_WAETHER,\r\n      payload: err.message\r\n    };\r\n  };\r\n\r\nconst FavoritesWeatherMockData = [\r\n  {\r\n    data:[{\r\n                LocalObservationDateTime: '2020-03-28T00:35:00+03:00',\r\n                EpochTime: 1585344900,\r\n                WeatherText: 'Mostly clear',\r\n                WeatherIcon: 34,\r\n                HasPrecipitation: false,\r\n                PrecipitationType: null,\r\n                IsDayTime: false,\r\n                Temperature: {\r\n                    Metric: {\r\n                    Value: 16.9,\r\n                    Unit: 'C',\r\n                    UnitType: 17\r\n                    },\r\n                    Imperial: {\r\n                    Value: 62,\r\n                    Unit: 'F',\r\n                    UnitType: 18\r\n                    }\r\n                },\r\n                MobileLink: 'http://m.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us',\r\n                Link: 'http://www.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us'\r\n    }]\r\n  },\r\n  {\r\n    data:[{\r\n      LocalObservationDateTime: '2020-03-28T00:35:00+03:00',\r\n      EpochTime: 1585344900,\r\n      WeatherText: 'Mostly clear',\r\n      WeatherIcon: 34,\r\n      HasPrecipitation: false,\r\n      PrecipitationType: null,\r\n      IsDayTime: false,\r\n      Temperature: {\r\n        Metric: {\r\n          Value: 16.9,\r\n          Unit: 'C',\r\n          UnitType: 17\r\n        },\r\n        Imperial: {\r\n          Value: 62,\r\n          Unit: 'F',\r\n          UnitType: 18\r\n        }\r\n      },\r\n      MobileLink: 'http://m.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us',\r\n      Link: 'http://www.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us'\r\n    }]\r\n  },\r\n  {\r\n    data:[{\r\n                LocalObservationDateTime: '2020-03-28T00:35:00+03:00',\r\n                EpochTime: 1585344900,\r\n                WeatherText: 'Mostly clear',\r\n                WeatherIcon: 34,\r\n                HasPrecipitation: false,\r\n                PrecipitationType: null,\r\n                IsDayTime: false,\r\n                Temperature: {\r\n                    Metric: {\r\n                    Value: 16.9,\r\n                    Unit: 'C',\r\n                    UnitType: 17\r\n                    },\r\n                    Imperial: {\r\n                    Value: 62,\r\n                    Unit: 'F',\r\n                    UnitType: 18\r\n                    }\r\n                },\r\n                MobileLink: 'http://m.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us',\r\n                Link: 'http://www.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us'\r\n    }]\r\n  },\r\n  {\r\n    data:[{\r\n                LocalObservationDateTime: '2020-03-28T00:35:00+03:00',\r\n                EpochTime: 1585344900,\r\n                WeatherText: 'Mostly clear',\r\n                WeatherIcon: 34,\r\n                HasPrecipitation: false,\r\n                PrecipitationType: null,\r\n                IsDayTime: false,\r\n                Temperature: {\r\n                    Metric: {\r\n                    Value: 16.9,\r\n                    Unit: 'C',\r\n                    UnitType: 17\r\n                    },\r\n                    Imperial: {\r\n                    Value: 62,\r\n                    Unit: 'F',\r\n                    UnitType: 18\r\n                    }\r\n                },\r\n                MobileLink: 'http://m.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us',\r\n                Link: 'http://www.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us'\r\n    }]\r\n  },\r\n  {\r\n    data:[{\r\n                LocalObservationDateTime: '2020-03-28T00:35:00+03:00',\r\n                EpochTime: 1585344900,\r\n                WeatherText: 'Mostly clear',\r\n                WeatherIcon: 34,\r\n                HasPrecipitation: false,\r\n                PrecipitationType: null,\r\n                IsDayTime: false,\r\n                Temperature: {\r\n                    Metric: {\r\n                    Value: 16.9,\r\n                    Unit: 'C',\r\n                    UnitType: 17\r\n                    },\r\n                    Imperial: {\r\n                    Value: 62,\r\n                    Unit: 'F',\r\n                    UnitType: 18\r\n                    }\r\n                },\r\n                MobileLink: 'http://m.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us',\r\n                Link: 'http://www.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us'\r\n    }]\r\n  },\r\n  {\r\n    data:[{\r\n                LocalObservationDateTime: '2020-03-28T00:35:00+03:00',\r\n                EpochTime: 1585344900,\r\n                WeatherText: 'Mostly clear',\r\n                WeatherIcon: 34,\r\n                HasPrecipitation: false,\r\n                PrecipitationType: null,\r\n                IsDayTime: false,\r\n                Temperature: {\r\n                    Metric: {\r\n                    Value: 16.9,\r\n                    Unit: 'C',\r\n                    UnitType: 17\r\n                    },\r\n                    Imperial: {\r\n                    Value: 62,\r\n                    Unit: 'F',\r\n                    UnitType: 18\r\n                    }\r\n                },\r\n                MobileLink: 'http://m.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us',\r\n                Link: 'http://www.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us'\r\n    }]\r\n  },\r\n  {\r\n    data:[{\r\n                LocalObservationDateTime: '2020-03-28T00:35:00+03:00',\r\n                EpochTime: 1585344900,\r\n                WeatherText: 'Mostly clear',\r\n                WeatherIcon: 34,\r\n                HasPrecipitation: false,\r\n                PrecipitationType: null,\r\n                IsDayTime: false,\r\n                Temperature: {\r\n                    Metric: {\r\n                    Value: 16.9,\r\n                    Unit: 'C',\r\n                    UnitType: 17\r\n                    },\r\n                    Imperial: {\r\n                    Value: 62,\r\n                    Unit: 'F',\r\n                    UnitType: 18\r\n                    }\r\n                },\r\n                MobileLink: 'http://m.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us',\r\n                Link: 'http://www.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us'\r\n    }]\r\n  },\r\n  {\r\n    data:[{\r\n                LocalObservationDateTime: '2020-03-28T00:35:00+03:00',\r\n                EpochTime: 1585344900,\r\n                WeatherText: 'Mostly clear',\r\n                WeatherIcon: 34,\r\n                HasPrecipitation: false,\r\n                PrecipitationType: null,\r\n                IsDayTime: false,\r\n                Temperature: {\r\n                    Metric: {\r\n                    Value: 16.9,\r\n                    Unit: 'C',\r\n                    UnitType: 17\r\n                    },\r\n                    Imperial: {\r\n                    Value: 62,\r\n                    Unit: 'F',\r\n                    UnitType: 18\r\n                    }\r\n                },\r\n                MobileLink: 'http://m.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us',\r\n                Link: 'http://www.accuweather.com/en/il/porat/212568/current-weather/212568?lang=en-us'\r\n    }]\r\n  }\r\n]","import {autoCompleteSearch as autoCompleteSearchAPI} from '../apiMap'\r\n\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {SET_AUTO_COMPLETE, LOADING_AUTO_COMPLETE, ERROR_AUTO_COMPLETE} from '../actions/types';\r\nimport { enqueueSnackbar, closeSnackbar } from './notificationAction';\r\nimport axios from 'axios'\r\nimport config from '../config';\r\n\r\nexport const autoCompleteSearch = (query) => async (dispatch) => {\r\n\r\n  dispatch(autoCompleteSearchLoading(true))\r\n  try{\r\n    // throw new Error('')\r\n    // THIS IS WORKING API CALL, REMOVE ON PRODUCTION\r\n\r\n    if(config.isProduction){\r\n      const res = await axios.get(autoCompleteSearchAPI(query))\r\n      dispatch({\r\n        type: SET_AUTO_COMPLETE,\r\n        payload: res.data\r\n      });\r\n      dispatch(autoCompleteSearchLoading(false))\r\n    }\r\n    else{\r\n      setTimeout(()=>{\r\n        dispatch({\r\n          type: SET_AUTO_COMPLETE,\r\n          payload: mockAutoCompleteData\r\n        });\r\n        dispatch(autoCompleteSearchLoading(false))\r\n      }, 500)\r\n    }\r\n  }\r\n  catch(err){\r\n    dispatch(enqueueSnackbar({\r\n      message: 'error fetching search information ',\r\n      options: {\r\n          key: new Date().getTime() + Math.random(),\r\n          variant: 'error',\r\n          action: key => (\r\n              <Button onClick={() => dispatch(closeSnackbar(key))}>dismiss me</Button>\r\n          ),\r\n      },\r\n    }))\r\n    console.error(err.message)\r\n    dispatch(autoCompleteSearchError(err))\r\n    dispatch(autoCompleteSearchLoading(false))\r\n  }\r\n};\r\n\r\nexport const autoCompleteSearchLoading = (isLoading) => {\r\n    return {\r\n      type: LOADING_AUTO_COMPLETE,\r\n      payload: isLoading\r\n    };\r\n};\r\n\r\nexport const autoCompleteSearchError = (err) => (dispatch) => {\r\n  return {\r\n    type: ERROR_AUTO_COMPLETE,\r\n    payload: err\r\n  };\r\n};\r\n\r\n\r\n\r\nconst mockAutoCompleteData=  [\r\n      {\r\n        Version: 1,\r\n        Key: '182536',\r\n        Type: 'City',\r\n        Rank: 10,\r\n        LocalizedName: 'Athens',\r\n        Country: {\r\n          ID: 'GR',\r\n          LocalizedName: 'Greece'\r\n        },\r\n        AdministrativeArea: {\r\n          ID: 'I',\r\n          LocalizedName: 'Attica'\r\n        }\r\n      },\r\n      {\r\n        Version: 1,\r\n        Key: '316938',\r\n        Type: 'City',\r\n        Rank: 10,\r\n        LocalizedName: 'Ankara',\r\n        Country: {\r\n          ID: 'TR',\r\n          LocalizedName: 'Turkey'\r\n        },\r\n        AdministrativeArea: {\r\n          ID: '06',\r\n          LocalizedName: 'Ankara'\r\n        }\r\n      },\r\n      {\r\n        Version: 1,\r\n        Key: '126995',\r\n        Type: 'City',\r\n        Rank: 11,\r\n        LocalizedName: 'Alexandria',\r\n        Country: {\r\n          ID: 'EG',\r\n          LocalizedName: 'Egypt'\r\n        },\r\n        AdministrativeArea: {\r\n          ID: 'ALX',\r\n          LocalizedName: 'Alexandria'\r\n        }\r\n      },\r\n      {\r\n        Version: 1,\r\n        Key: '56912',\r\n        Type: 'City',\r\n        Rank: 13,\r\n        LocalizedName: 'Anqing',\r\n        Country: {\r\n          ID: 'CN',\r\n          LocalizedName: 'China'\r\n        },\r\n        AdministrativeArea: {\r\n          ID: 'AH',\r\n          LocalizedName: 'Anhui'\r\n        }\r\n      },\r\n      {\r\n        Version: 1,\r\n        Key: '59083',\r\n        Type: 'City',\r\n        Rank: 15,\r\n        LocalizedName: 'Anyang',\r\n        Country: {\r\n          ID: 'CN',\r\n          LocalizedName: 'China'\r\n        },\r\n        AdministrativeArea: {\r\n          ID: 'HA',\r\n          LocalizedName: 'Henan'\r\n        }\r\n      },\r\n      {\r\n        Version: 1,\r\n        Key: '102138',\r\n        Type: 'City',\r\n        Rank: 15,\r\n        LocalizedName: 'Anshan',\r\n        Country: {\r\n          ID: 'CN',\r\n          LocalizedName: 'China'\r\n        },\r\n        AdministrativeArea: {\r\n          ID: 'LN',\r\n          LocalizedName: 'Liaoning'\r\n        }\r\n      },\r\n      {\r\n        Version: 1,\r\n        Key: '202438',\r\n        Type: 'City',\r\n        Rank: 15,\r\n        LocalizedName: 'Ahmedabad',\r\n        Country: {\r\n          ID: 'IN',\r\n          LocalizedName: 'India'\r\n        },\r\n        AdministrativeArea: {\r\n          ID: 'GJ',\r\n          LocalizedName: 'Gujarat'\r\n        }\r\n      },\r\n      {\r\n        Version: 1,\r\n        Key: '2093',\r\n        Type: 'City',\r\n        Rank: 20,\r\n        LocalizedName: 'Algiers',\r\n        Country: {\r\n          ID: 'DZ',\r\n          LocalizedName: 'Algeria'\r\n        },\r\n        AdministrativeArea: {\r\n          ID: '16',\r\n          LocalizedName: 'Alger'\r\n        }\r\n      },\r\n      {\r\n        Version: 1,\r\n        Key: '126831',\r\n        Type: 'City',\r\n        Rank: 20,\r\n        LocalizedName: 'Addis Ababa',\r\n        Country: {\r\n          ID: 'ET',\r\n          LocalizedName: 'Ethiopia'\r\n        },\r\n        AdministrativeArea: {\r\n          ID: 'AA',\r\n          LocalizedName: 'Addis Ababa'\r\n        }\r\n      },\r\n      {\r\n        Version: 1,\r\n        Key: '178551',\r\n        Type: 'City',\r\n        Rank: 20,\r\n        LocalizedName: 'Accra',\r\n        Country: {\r\n          ID: 'GH',\r\n          LocalizedName: 'Ghana'\r\n        },\r\n        AdministrativeArea: {\r\n          ID: 'AA',\r\n          LocalizedName: 'Greater Accra'\r\n        }\r\n      }\r\n    ]","import {autoCompleteSearch} from './actions/autoCompleteAction';\r\nimport store from \"./store\";\r\nimport * as _ from 'lodash';\r\n\r\n\r\nexport const debounced = _.debounce((query)=>{\r\n    return store.dispatch(autoCompleteSearch(query));\r\n  },200)\r\n\r\nexport const convertToF = (celsius) => {\r\n    let fahrenheit\r\n    // Only change code below this line\r\n    fahrenheit = (celsius * (9/5)) + 32 // fahenheit = celsius * 9/5 + 32 works too.\r\n    // Only change code above this line\r\n    return Math.round(fahrenheit);\r\n}\r\nexport const convertToC = (fahrenheit) => {\r\n  let celsius\r\n  // Only change code below this line\r\n  celsius = (fahrenheit - 32) /  (9/5)\r\n  // Only change code above this line\r\n  return Math.round(celsius);\r\n}"],"sourceRoot":""}